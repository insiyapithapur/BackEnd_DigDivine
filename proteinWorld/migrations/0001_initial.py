# Generated by Django 3.2.9 on 2022-06-04 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import proteinWorld.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ads',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('ad_type', models.CharField(max_length=255)),
                ('unit_id', models.CharField(max_length=255)),
                ('app_id', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdSenseCount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('product_list', models.IntegerField(default=10)),
                ('dp_list', models.IntegerField(default=10)),
                ('bill_list', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('BrandName', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BrochureSections',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('brochure_name', models.CharField(max_length=255, null=True, unique=True)),
                ('brochure_image', models.ImageField(null=True, upload_to='BrochureSections')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoinSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('section_name', models.CharField(max_length=255)),
                ('ads_id', models.CharField(max_length=255)),
                ('reward_point', models.IntegerField()),
                ('minmax_point', models.CharField(max_length=18)),
                ('image', models.ImageField(blank=True, null=True, upload_to='CoinSection')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CpaleadCallback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callback_url', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DistributionPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('dpID', models.CharField(max_length=50, null=True, unique=True)),
                ('dpName', models.CharField(max_length=100)),
                ('dpAddress', models.CharField(max_length=255)),
                ('cityName', models.CharField(max_length=100, null=True)),
                ('pincode', models.CharField(max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('mob', models.CharField(blank=True, max_length=20, null=True)),
                ('alternative_mob', models.CharField(blank=True, max_length=20, null=True)),
                ('emailAddress', models.CharField(blank=True, max_length=50, null=True)),
                ('dp_type', models.CharField(choices=[('ProteinWorld Super Store', 'ProteinWorld Super Store'), ('ProteinWorld Success Center (HSC)', 'ProteinWorld Success Center (HSC)'), ('ProteinWorld Lifestyle Center', 'ProteinWorld Lifestyle Center'), ('ProteinWorld Access Point (TFS Store)', 'ProteinWorld Access Point (TFS Store)'), ('DISTRIBUTION POINTS (DPS)', 'DISTRIBUTION POINTS (DPS)')], default='DISTRIBUTION POINTS (DPS)', max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EarningModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('earning_amount', models.CharField(max_length=255)),
                ('description_link', models.FileField(blank=True, null=True, upload_to='EarningModel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField(blank=True, null=True)),
                ('answer_link', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OfferReferBgImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('view_all_offer', models.ImageField(upload_to='ORDImage')),
                ('dp_list', models.ImageField(upload_to='ORDImage')),
                ('refer_earn', models.ImageField(upload_to='ORDImage')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('orderNumber', models.CharField(default=proteinWorld.models.create_new_ref_number, max_length=30, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('distributionpoint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldDP', to='proteinWorld.distributionpoint')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('productCode', models.CharField(max_length=30, unique=True)),
                ('productName', models.CharField(max_length=100)),
                ('productPrice', models.CharField(max_length=50)),
                ('colorDesc', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.CharField(max_length=20, null=True)),
                ('loyalty', models.BooleanField(default=False, null=True)),
                ('ProductDescription', models.TextField(blank=True, null=True)),
                ('discount', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('businessVolume', models.CharField(max_length=50, null=True)),
                ('personalVolume', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('availability', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('brand', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='proteinWorld.brand')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='RequiredCoinsForBill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('required_coins', models.IntegerField(default=0)),
                ('spinner_required_coins', models.IntegerField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectionData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('title', models.CharField(choices=[('Why to use', 'Why to use'), ('Demo Videos', 'Demo Videos'), ('Business Opportunity', 'Business Opportunity'), ('Training Videos', 'Training Videos'), ('Motivational Videos', 'Motivational Videos'), ('Success Stories', 'Success Stories'), ('Testimonial Videos', 'Testimonial Videos'), ('About Modicare', 'About Modicare'), ('Become a Partner', 'Become a Partner'), ('Previous Events', 'Previous Events'), ('Upcoming Events', 'Upcoming Events'), ('Book Ticket', 'Book Ticket'), ('Broucher', 'Broucher'), ('Earning Model', 'Earning Model')], max_length=100, unique=True)),
                ('section_image', models.ImageField(blank=True, null=True, upload_to='SectionImages')),
                ('section_name', models.CharField(choices=[('Why ProteinWorld', 'Why ProteinWorld'), ('Learnings', 'Learnings'), ('Archivers', 'Archivers'), ('Events', 'Events')], default=None, max_length=50)),
                ('section_type', models.CharField(choices=[('video', 'Video'), ('static', 'Static')], default=None, max_length=50, null=True)),
                ('section_data', models.URLField(blank=True, max_length=300, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tagName', models.CharField(max_length=50, unique=True)),
                ('tagImage', models.ImageField(blank=True, null=True, upload_to='CategoryImages')),
                ('tagImageUrl', models.URLField(blank=True, max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('serial_no', models.IntegerField(blank=True, null=True, unique=True)),
            ],
            options={
                'ordering': ('serial_no',),
            },
        ),
        migrations.CreateModel(
            name='VideoSections',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('video_link', models.URLField(blank=True, max_length=300, null=True)),
                ('embed_link', models.TextField(blank=True, null=True)),
                ('thumbnail', models.URLField(blank=True, null=True)),
                ('section', models.CharField(choices=[('Why to use', 'Why to use'), ('Demo Videos', 'Demo Videos'), ('Business Opportunity', 'Business Opportunity'), ('Training Videos', 'Training Videos'), ('Motivational Videos', 'Motivational Videos'), ('Success Stories', 'Success Stories'), ('Testimonial Videos', 'Testimonial Videos')], default=None, max_length=200, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='UserShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=10)),
                ('mobileNumber', models.CharField(max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProteinWorldUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCoin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('coin', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldUserCoin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagHirarchy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='proteinWorld.tagname')),
                ('subcategory', models.ManyToManyField(related_name='subcategory', to='proteinWorld.TagName')),
            ],
            options={
                'ordering': ('category__serial_no',),
            },
        ),
        migrations.CreateModel(
            name='ProteinWorldUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protein_world_user', models.BooleanField(default=False)),
                ('user_mob_id', models.CharField(max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('image_url', models.URLField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='ProductImages')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productImages', to='proteinWorld.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('productQty', models.PositiveIntegerField()),
                ('PricePerPiece', models.CharField(max_length=30)),
                ('DiscountPerPiece', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ProteinWorldOrderProducts', to='proteinWorld.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldProduct', to='proteinWorld.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='shippingDetails',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldUserShippingAddress', to='proteinWorld.usershippingaddress'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldOrderUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DailyCheckIn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldDailyCheckIN', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='coinHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('coin', models.IntegerField()),
                ('type', models.CharField(choices=[('credit', 'credit'), ('debit', 'debit')], max_length=25)),
                ('info', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldCoinHistory', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoinData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('section_type', models.CharField(max_length=255)),
                ('coin', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ProteinWorldCoinData', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Broucher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('book_name', models.CharField(max_length=255, null=True)),
                ('book_pdf', models.FileField(blank=True, null=True, upload_to='Bookpdf')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('brochure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='proteinWorld.brochuresections')),
            ],
        ),
        migrations.CreateModel(
            name='productTagPivot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='p_category', to='proteinWorld.tagname')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='proteinWorld.product')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='P_subcategory', to='proteinWorld.tagname')),
            ],
            options={
                'unique_together': {('product', 'category', 'subcategory')},
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('savelater', models.BooleanField(default=False)),
                ('productQty', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proteinWorld.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProteinWorldUsercart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'unique_together': {('product', 'user')},
            },
        ),
    ]
