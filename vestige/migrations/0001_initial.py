# Generated by Django 3.2.9 on 2022-04-27 10:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('BrandName', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DistributionPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('dpID', models.CharField(max_length=50, null=True, unique=True)),
                ('dpName', models.CharField(max_length=100)),
                ('dpAddress', models.CharField(max_length=255)),
                ('cityName', models.CharField(max_length=100, null=True)),
                ('pincode', models.CharField(max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('mob', models.CharField(blank=True, max_length=20, null=True)),
                ('alternative_mob', models.CharField(blank=True, max_length=20, null=True)),
                ('emailAddress', models.CharField(blank=True, max_length=50, null=True)),
                ('dp_type', models.CharField(choices=[('Modicare Super Store', 'Modicare Super Store'), ('Modicare Success Center (MSC)', 'Modicare Success Center (MSC)'), ('Modicare Lifestyle Center', 'Modicare Lifestyle Center'), ('Modicare Access Point (TFS Store)', 'Modicare Access Point (TFS Store)'), ('DISTRIBUTION POINTS (DPS)', 'DISTRIBUTION POINTS (DPS)')], default='DISTRIBUTION POINTS (DPS)', max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('productCode', models.CharField(max_length=30, unique=True)),
                ('productName', models.CharField(max_length=100)),
                ('productPrice', models.CharField(max_length=50)),
                ('colorDesc', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.CharField(max_length=20, null=True)),
                ('loyalty', models.BooleanField(default=False, null=True)),
                ('ProductDescription', models.TextField(blank=True, null=True)),
                ('discount', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('businessVolume', models.CharField(max_length=50, null=True)),
                ('personalVolume', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('availability', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('brand', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='vestige.brand')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TagName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tagName', models.CharField(max_length=50, unique=True)),
                ('tagImage', models.ImageField(blank=True, null=True, upload_to='CategoryImages')),
                ('tagImageUrl', models.URLField(blank=True, max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('serial_no', models.IntegerField(blank=True, null=True, unique=True)),
            ],
            options={
                'ordering': ('serial_no',),
            },
        ),
        migrations.CreateModel(
            name='TagHirarchy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='vestige.tagname')),
                ('subcategory', models.ManyToManyField(related_name='subcategory', to='vestige.TagName')),
            ],
            options={
                'ordering': ('category__serial_no',),
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('image_url', models.URLField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='ProductImages')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productImages', to='vestige.product')),
            ],
        ),
        migrations.CreateModel(
            name='productTagPivot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='p_category', to='vestige.tagname')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vestige.product')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='P_subcategory', to='vestige.tagname')),
            ],
            options={
                'unique_together': {('product', 'category', 'subcategory')},
            },
        ),
    ]
